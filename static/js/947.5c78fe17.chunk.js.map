{"version":3,"file":"static/js/947.5c78fe17.chunk.js","mappings":"uQAEaA,EAAOC,EAAAA,GAAAA,KAAH,0IASJC,EAAQD,EAAAA,GAAAA,MAAH,uVAeLE,EAAeF,EAAAA,GAAAA,MAAH,2IAQZG,EAAaH,EAAAA,GAAAA,OAAH,iWAeVI,EAAWJ,EAAAA,GAAAA,IAAH,oF,SCkCrB,EAvEkB,WAChB,OAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHR,EAASS,GACT,MACF,IAAK,WACHP,EAAYO,GAMjB,EAkBD,OACE,SAACZ,EAAD,WACE,UAACL,EAAD,CAAMkB,SAlBgB,SAAAC,GACxBA,EAAMC,iBACN,IAAMC,EAAY,CAAEd,MAAAA,EAAOE,SAAAA,GAC3BE,GAASW,EAAAA,EAAAA,IAAMD,IACZE,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAA,UAAiBD,EAAsBJ,UAAUL,KAAjD,kBACD,IACAW,OAAM,WACL,MAAO,6BACR,IAEHnB,EAAS,IACTE,EAAY,GACb,EAIG,WACE,UAACP,EAAD,WAAc,SAEZ,SAACD,EAAD,CACE0B,KAAK,QACLZ,KAAK,QACLC,MAAOV,EACPsB,QAAQ,2EACRC,MAAM,oLACNC,UAAQ,EACRC,YAAY,kBACZC,SAAUpB,QAGd,UAACV,EAAD,WAAc,YAEZ,SAACD,EAAD,CACE0B,KAAK,WACLZ,KAAK,WACLC,MAAOR,EACPoB,QAAQ,2CACRC,MAAM,wJACNC,UAAQ,EACRC,YAAY,qBACZC,SAAUpB,QAGd,SAACT,EAAD,CAAYwB,KAAK,SAAjB,SAA0B,cAIjC,EC3ED,EAJkB,WAChB,OAAO,SAAC,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  width: 370px;\n  padding: 8px;\n  gap: 18px;\n  flex-wrap: wrap;\n  border: 2px solid black;\n`;\n\nexport const Input = styled.input`\n  height: 25px;\n  padding: 4px;\n  width: 280px;\n  margin-left: 8 px;\n  border-radius: 5px;\n  transition: all 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  &:hover {\n    border: 3px dotted #3a7999;\n    color: #3a7999;\n    background: rgba(0, 0, 0, 0);\n    box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const Labelcontact = styled.label`\n  width: 400px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  padding: 4px 5px;\n`;\n\nexport const ButtonSend = styled.button`\n  border: 3px solid #3a7999;\n  border-radius: 20px;\n  background-color: #fffcfc;\n  cursor: pointer;\n\n  transition: all 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  &:hover {\n    border: 3px dotted #3a7999;\n    color: #3a7999;\n    background: rgba(0, 0, 0, 0);\n    box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const LoginDiv = styled.div`\n  width: 500px;\n  margin: 0px auto;\n  padding-top: 30px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { logIn } from 'redux/auth/authThunk';\nimport {\n  ButtonSend,\n  Form,\n  Input,\n  Labelcontact,\n  LoginDiv,\n} from './LoginForm.styled';\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChangeInput = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const hendleSubmitLogin = event => {\n    event.preventDefault();\n    const loginUser = { email, password };\n    dispatch(logIn(loginUser))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(`${originalPromiseResult.loginUser.name} welcome back!`);\n      })\n      .catch(() => {\n        return 'Incorrect login or password';\n      });\n\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <LoginDiv>\n      <Form onSubmit={hendleSubmitLogin}>\n        <Labelcontact>\n          Email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n            title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n            required\n            placeholder=\"Enter email ...\"\n            onChange={handleChangeInput}\n          />\n        </Labelcontact>\n        <Labelcontact>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n            title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n            required\n            placeholder=\"Enter password ...\"\n            onChange={handleChangeInput}\n          />\n        </Labelcontact>\n        <ButtonSend type=\"submit\">LogIn</ButtonSend>\n      </Form>\n    </LoginDiv>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from \"components/LoginForm/LoginForm\";\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n"],"names":["Form","styled","Input","Labelcontact","ButtonSend","LoginDiv","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChangeInput","e","currentTarget","name","value","onSubmit","event","preventDefault","loginUser","logIn","unwrap","then","originalPromiseResult","toast","catch","type","pattern","title","required","placeholder","onChange"],"sourceRoot":""}