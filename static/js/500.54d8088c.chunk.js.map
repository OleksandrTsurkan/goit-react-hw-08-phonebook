{"version":3,"file":"static/js/500.54d8088c.chunk.js","mappings":"uQAWaA,GATiBC,EAAAA,GAAAA,KAAH,0IASIA,EAAAA,GAAAA,MAAH,wVAefC,EAAyBD,EAAAA,GAAAA,MAAH,2IAQtBE,EAAuBF,EAAAA,GAAAA,OAAH,iWAepBG,EAAgBH,EAAAA,GAAAA,IAAH,oF,SCiD1B,EAvFqB,SAAfI,IACJ,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,eAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GAMjB,EAiBD,OACE,SAACd,EAAD,WACE,UAACC,EAAD,CAAcc,SAlBO,SAAAH,GACvBA,EAAEI,iBACF,IAAMC,EAAU,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAC/BW,QAAQC,IAAI,UAAWF,GACvBR,GAASW,EAAAA,EAAAA,IAASH,IACfI,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAA,UAAiBD,EAAsBN,QAAQd,KAA/C,aACD,IACAsB,OAAM,WACLD,EAAAA,GAAAA,QAAc,2BACf,IACHpB,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAGG,WACE,UAACV,EAAD,WAAwB,QAEtB,SAACF,EAAD,CACE8B,KAAK,OACLvB,KAAK,OACLW,MAAOX,EACPwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,iBACZC,SAAUpB,QAGd,UAACb,EAAD,WAAwB,SAEtB,SAACF,EAAD,CACE8B,KAAK,QACLvB,KAAK,QACLW,MAAOT,EACPsB,QAAQ,2EACRC,MAAM,oLACNC,UAAQ,EACRC,YAAY,kBACZC,SAAUpB,QAGd,UAACb,EAAD,WAAwB,YAEtB,SAACF,EAAD,CACE8B,KAAK,WACLvB,KAAK,WACLW,MAAOP,EACPoB,QAAQ,2CACRC,MAAM,wJACNC,UAAQ,EACRC,YAAY,qBACZC,SAAUpB,QAGd,SAACZ,EAAD,CAAsB2B,KAAK,SAA3B,SAAoC,iBAI3C,EC1FD,EAJqB,WACnB,OAAO,SAAC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const RegisteredForm = styled.form`\n  display: flex;\n  width: 370px;\n  padding: 8px;\n  gap: 18px;\n  flex-wrap: wrap;\n  border: 2px solid black;\n`;\n\nexport const RegisteredInput = styled.input`\n  height: 25px;\n  padding: 4px;\n  width: 280px;\n  margin-left: 8 px;\n  border-radius: 5px;\n  transition: all 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  &:hover {\n    border: 3px dotted #3a7999;\n    color: #3a7999;\n    background: rgba(0, 0, 0, 0);\n    box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const LabelContactRegistered = styled.label`\n  width: 400px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  padding: 4px 5px;\n`;\n\nexport const ButtonSendRegistered = styled.button`\n  border: 3px solid #3a7999;\n  border-radius: 20px;\n  background-color: #fffcfc;\n  cursor: pointer;\n\n  transition: all 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  &:hover {\n    border: 3px dotted #3a7999;\n    color: #3a7999;\n    background: rgba(0, 0, 0, 0);\n    box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const RegisteredDiv = styled.div`\n  width: 500px;\n  margin: 0px auto;\n  padding-top: 30px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { register } from 'redux/auth/authThunk';\nimport {\n  ButtonSendRegistered,\n  LabelContactRegistered,\n  RegisteredDiv,\n  RegisteredInput,\n} from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChangeInput = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const handleSubmitUser = e => {\n    e.preventDefault();\n    const newUser = { name, email, password };\n    console.log('newUser', newUser);\n    dispatch(register(newUser))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(`${originalPromiseResult.newUser.name} welcome!`);\n      })\n      .catch(() => {\n        toast.failure(\"Sorry, something's wrong\");\n      });\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <RegisteredDiv>\n      <RegisterForm onSubmit={handleSubmitUser}>\n        <LabelContactRegistered>\n          Name\n          <RegisteredInput\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter name ...\"\n            onChange={handleChangeInput}\n          />\n        </LabelContactRegistered>\n        <LabelContactRegistered>\n          Email\n          <RegisteredInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n            title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n            required\n            placeholder=\"Enter email ...\"\n            onChange={handleChangeInput}\n          />\n        </LabelContactRegistered>\n        <LabelContactRegistered>\n          Password\n          <RegisteredInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n            title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n            required\n            placeholder=\"Enter password ...\"\n            onChange={handleChangeInput}\n          />\n        </LabelContactRegistered>\n        <ButtonSendRegistered type=\"submit\">Register</ButtonSendRegistered>\n      </RegisterForm>\n    </RegisteredDiv>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["RegisteredInput","styled","LabelContactRegistered","ButtonSendRegistered","RegisteredDiv","RegisterForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChangeInput","e","currentTarget","value","onSubmit","preventDefault","newUser","console","log","register","unwrap","then","originalPromiseResult","toast","catch","type","pattern","title","required","placeholder","onChange"],"sourceRoot":""}