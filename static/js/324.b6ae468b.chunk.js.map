{"version":3,"file":"static/js/324.b6ae468b.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Error/Error.styled.js","components/Error/Error.jsx","components/EmptyContactList/EmptyContactList.styled.js","components/EmptyContactList/EmptyContactList.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { styled } from 'styled-components';\n\nexport const FormContact = styled.form`\n  display: flex;\n  width: 370px;\n  padding: 8px;\n  gap: 18px;\n  flex-wrap: wrap;\n  border: 2px solid black;\n`;\n\nexport const InputContact = styled.input`\n  height: 25px;\n  padding: 4px;\n  width: 280px;\n  margin-left: 8 px;\n  border-radius: 5px;\n  transition: all 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  &:hover {\n    border: 3px dotted #3a7999;\n    color: #3a7999;\n    background: rgba(0, 0, 0, 0);\n    box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const Labelcontact = styled.label`\n  width: 400px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  padding: 4px 5px;\n`;\n\nexport const ButtonSend = styled.button`\n  border: 3px solid #3a7999;\n  border-radius: 20px;\n  background-color: #fffcfc;\n  cursor: pointer;\n\n  transition: all 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  &:hover {\n    border: 3px dotted #3a7999;\n    color: #3a7999;\n    background: rgba(0, 0, 0, 0);\n    box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const ContactDiv = styled.div`\n  width: 500px;\n  margin: 0px auto;\n  padding-top: 30px;\n`;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContactsList } from 'redux/contacts/contactsSelectors';\nimport {\n  ButtonSend,\n  ContactDiv,\n  FormContact,\n  InputContact,\n  Labelcontact,\n} from './ContactForm.styled';\nimport { createContactsThunk } from 'redux/contacts/thunk';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') setName(value);\n    else setNumber(value);\n  };\n\n  const onSubmitAddContact = event => {\n    event.preventDefault();\n    const data = { name, number };\n    const newObj = { ...data, id: nanoid() };\n\n    if (isNameNew(contacts, newObj) !== undefined) {\n      toast.warning(`${newObj.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(createContactsThunk(newObj))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(\n          `${originalPromiseResult.name} successfully added to contacts`\n        );\n      })\n      .catch(() => {\n        toast.failure(\"Sorry, something's wrong\");\n      });\n    reset();\n  };\n\n  const isNameNew = (contacts, newObj) => {\n    return contacts.find(\n      ({ name }) => name.toLowerCase() === newObj.name.toLowerCase()\n    );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ContactDiv>\n      <FormContact onSubmit={onSubmitAddContact}>\n        <Labelcontact>\n          Name\n          <InputContact\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={handleChange}\n            value={name}\n            placeholder=\"Enter name ...\"\n            required\n          />\n        </Labelcontact>\n        <Labelcontact>\n          Number\n          <InputContact\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            value={number}\n            placeholder=\"Enter number ...\"\n            required\n          />\n        </Labelcontact>\n        <ButtonSend type=\"submit\">Add contact</ButtonSend>\n      </FormContact>\n    </ContactDiv>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  width: 400px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  padding: 4px 5px;\n`;\n\nexport const FilterInput = styled.input`\n  height: 25px;\n  padding: 4px;\n  width: 200px;\n  border-radius: 5px;\n  border: 1px solid blue;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterSet, selectContactsFilter } from 'redux/filters/slice';\nimport { FilterInput, FilterLabel } from './Filter.styled';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectContactsFilter);\n\n  const onChangeFilter = event => {\n    const { value } = event.currentTarget;\n    dispatch(filterSet(value));\n  };\n\n  return (\n    <div>\n      <FilterLabel>\n        Find contacts by name:\n        <FilterInput\n          name=\"filter\"\n          type=\"text\"\n          value={filter}\n          onChange={onChangeFilter}\n        />\n      </FilterLabel>\n    </div>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const ErrorDiv = styled.div`\n  text-align: center;\n  margin-top: 30px;\n  padding: 10px;\n  width: 350px;\n  font-size: 24px;\n  background-color: tomato;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectError } from 'redux/contacts/contactsSelectors';\n\nimport { ErrorDiv } from './Error.styled';\n\nexport const Error = () => {\n  const error = useSelector(selectError);\n\n  return (\n    <ErrorDiv>\n      <p> Нам шкода, {error}</p>\n    </ErrorDiv>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Block = styled.div`\n  width: 100%;\n  height: 60px;\n  border-radius: 7px;\n  opacity: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Block } from './EmptyContactList.styled';\n\nexport const EmptyContactsList = () => {\n  return (\n    <Block>\n      <h1>You don't have any contacts yet</h1>\n    </Block>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Ullist = styled.ul`\n  padding: 0px;\n  border: 1px solid black;\n  width: 421px;\n`;\n\nexport const Lilist = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 400px;\n  padding: 10px;\n  border: 1px solid black;\n`;\n\nexport const ButtonDelete = styled.button`\n  border: 3px solid #3a7999;\n  border-radius: 20px;\n  background-color: #fffcfc;\n  cursor: pointer;\n\n  transition: all 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  &:hover {\n    border: 3px dotted #3a7999;\n    color: red;\n    background: rgba(0, 0, 0, 0);\n    box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContactsList } from 'redux/contacts/contactsSelectors';\nimport { deleteContactsThunk, getContactsThunk } from 'redux/contacts/thunk';\nimport { selectContactsFilter } from 'redux/filters/slice';\nimport { ButtonDelete, Lilist, Ullist } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n\n  const visibleContacts = contacts.filter(({ name }) =>\n    name?.toLowerCase().includes(filter)\n  );\n\n  const deleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(\n          `${originalPromiseResult.name} successfully deleted from contacts`\n        );\n      })\n      .catch(() => {\n        toast.failure(\"Sorry, something's wrong\");\n      });\n  };\n  return (\n    <Ullist>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <Lilist key={id}>\n            <span>{name}</span>\n            <span>{number}</span>\n            <ButtonDelete\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </ButtonDelete>\n          </Lilist>\n        );\n      })}\n    </Ullist>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__BnqXB\"};","import * as React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Error } from 'components/Error/Error';\n\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectContactsList,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { EmptyContactsList } from 'components/EmptyContactList/EmptyContactList';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport css from './ContactsPage.module.css';\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const phoneBook = useSelector(selectContactsList);\n\n  return (\n    <div className={css.container}>\n      <ContactForm />\n      <Filter />\n      {error ? <Error /> : <ContactList />}\n      {phoneBook.length === 0 && !error && !isLoading && <EmptyContactsList />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","FormContact","styled","InputContact","Labelcontact","ButtonSend","ContactDiv","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","target","value","isNameNew","newObj","find","toLowerCase","reset","onSubmit","event","preventDefault","data","id","nanoid","undefined","createContactsThunk","unwrap","then","originalPromiseResult","toast","catch","type","pattern","title","onChange","placeholder","required","FilterLabel","FilterInput","Filter","filter","selectContactsFilter","currentTarget","filterSet","ErrorDiv","Error","Block","EmptyContactsList","Ullist","Lilist","ButtonDelete","ContactList","useEffect","getContactsThunk","visibleContacts","includes","map","onClick","contactId","deleteContactsThunk","phoneBook","className","css","length"],"sourceRoot":""}